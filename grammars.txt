# DO NOT EDIT! This file is generated automatically!
# generated: 20201004-00:42:40
# number of grammars: 128

Formal Grammar (L-system)
G = (V, ω, P)
V: alphabet, a finite set of variables and constants
ω: start, axiom or initiator
   ω ∈ V⁺
P: a fin. set of production (rewrite) rules
   P ⊂ V⨯V*

Description of the turtle symbols of the alphabet used:

Symbol	Description
F	move forward and draw a line
f	move forward without drawing a line
+	turn left
-	turn right
^	pitch up
&	pitch down
\	roll left
/	roll right
|	turn around
$	rotate the turtle to vertical
[	start a branch
]	complete a branch
!	decrement the diameter of segments
>	multiply the length of line by the scale
<	divide the length of line by the scale
`	increment color index
'	decrement color index

The following turtle symbols are not widely used:

Symbol	Description
K	draw a black line
R	draw a red line
G	draw a green line
B	draw a blue line
M	draw a magenta line
N	draw a brown line
L	draw a lime green line
Z	draw half of a line
z	move half of a line without drawing a line

---
Grammar #1: 32_segment_curve.ls
Description: 32 segment curve
Variables: {F}
P: {
	ω → F+F+F+F
	F → -F+F-F-F+F+FF-F+F+FF+F-F-FF+FF-FF+F+F-FF-F-F+FF-F-F+F+F-F+
	F → F
}
n = 2, δ = 90°
---
Grammar #2: aAA.ls
Description: Example of a production rule
Variables: {A}
P: {
	ω → A
	A → aAA
	A → A
}
n = 5
---
Grammar #3: algae.ls
Description: Lindenmayer's modelling the growth of Anabaena catenula
Variables: {A, B}
P: {
	ω → A
	A → AB
	B → A
	A → A
	B → B
}
n = 5
---
Grammar #4: algae_tree.ls
Description: Lindenmayer's modelling the growth of Anabaena catenula
Variables: {A, B}
P: {
	ω → A
	A → [-FA][+FB]
	B → FA
	A → ε
	B → ε
}
n = 7, δ = 20°
---
Grammar #5: alga.ls
Description: Alga
Variables: {F, X}
P: {
	ω → FX
	F → FF-[-F+F]+[+F-F]
	X → FF+[+F]+[-F]
	F → F
	X → ε
}
n = 4, δ = 25°
---
Grammar #6: andrea_4.ls
Description: Nice work from Andrea Kühne
Variables: {F}
P: {
	ω → F+F+F+F+F+F
	F → F++F-F-F-F-F++F
	F → F
}
n = 3, δ = 60°
---
Grammar #7: andrea_5.ls
Description: Nice work from Andrea Kühne
Variables: {F}
P: {
	ω → F+F+F+F+F+F
	F → F-F+F+F+F-F
	F → F
}
n = 3, δ = 60°
---
Grammar #8: andrea_6.ls
Description: Nice work from Andrea Kühne
Variables: {F}
P: {
	ω → F+F+F+F+F
	F → F-F+F+F+F--F
	F → F
}
n = 4, δ = 72°
---
Grammar #9: andrea.ls
Description: Nice work from Andrea Kühne
Variables: {F}
P: {
	ω → F+F+F+F+F+F+F+F+F
	F → F---F+F+F+F+F+F+F---F
	F → F
}
n = 2, δ = 40°
---
Grammar #10: andrea_rosette.ls
Description: Nice work from Andrea Kühne
Variables: {F}
P: {
	ω → F-F-F-F-F-F-F-F
	F → F---F+F+F+F+F+F+F---F
	F → F
}
n = 3, δ = 45°
---
Grammar #11: angular.ls
Description: Triangle with angular segments
Variables: {P, Q, R, S, T, U}
P: {
	ω → Q
	P → --R++++S--U
	Q → T++R----S++
	R → ++P----Q++T
	S → U--P++++Q--
	T → +U--P+
	U → -Q++T-
	P → F
	Q → F
	R → F
	S → F
	T → F
	U → F
}
n = 6, δ = 36°
---
Grammar #12: anklets_of_krishna.ls
Description: Anklets of Krishna
Variables: {X}
P: {
	ω → X-X
	X → XFX-XFX
	X → ε
}
n = 5, δ = 90°
---
Grammar #13: board.ls
Description: Board (derived from Koch curve)
Variables: {F}
P: {
	ω → F+F+F+F
	F → FF+F+F+F+FF
	F → F
}
n = 4, δ = 90°
---
Grammar #14: box_fractal.ls
Description: Box fractal
Variables: {F}
P: {
	ω → F-F-F-F
	F → F-F+F+F-F
	F → F
}
n = 4, δ = 90°
---
Grammar #15: bush_like_structure_three_dim.ls
Description: A three-dimensionsional bush-like structure
Variables: {A, B, F, L}
P: {
	ω → A
	A → [&FL!A]/////"[&FL!A]///////"[&FL!A]
	B → FL
	F → B/////F
	L → ["""^^{-f+f+f-|-f+f+f}]
	A → ε
	B → ε
	F → F
	L → ε
}
n = 3, δ = 22.9°
---
Grammar #16: cantor_set.ls
Description: Cantor set
Variables: {A, B}
P: {
	ω → A
	A → ABA
	B → BBB
	A → F
	B → f
}
n = 4, δ = 90°
---
Grammar #17: crossdragon.ls
Description: Cross dragon curve
Variables: {X, Y}
P: {
	ω → FX+F
	X → X+X+XY-Y-
	Y → +X+XY-Y-Y
	X → F
	Y → F
}
n = 5, δ = 90°
---
Grammar #18: dekking.ls
Description: Dekking [1982]
Variables: {F}
P: {
	ω → F+F+F
	F → F-F+F
	F → F
}
n = 5, δ = 120°
---
Grammar #19: dragon_curve.ls
Description: Dragon curve
Variables: {X, Y}
P: {
	ω → FX
	X → X+YF+
	Y → -FX-Y
	X → ε
	Y → ε
}
n = 10, δ = 90°
---
Grammar #20: fass_curve_1.ls
Description: FASS (space-Filling, self-Avoiding, Simple, self-Similar)
Variables: {L, R}
P: {
	ω → L
	L → LF+RFR+FL-F-LFLFL-FRFR+
	R → -LFLF+RFRFR+F+RF-LFL-FR
	L → ε
	R → ε
}
n = 3, δ = 90°
---
Grammar #21: fass_curve_2.ls
Description: FIXME: broken rules; FASS (space-Filling, self-Avoiding, Simple, self-Similar)
Variables: {L, R}
P: {
	ω → -L
	L → LFLF+RFR+FLFL-FRF-LF-LFR+F+RF-LFL-FRFRFR+
	R → -LFLFLF+RFR+FL-F-LF+RFR+FLF+RFRF-LFL-FRFR
	L → ε
	R → ε
}
n = 2, δ = 90°
---
Grammar #22: fass_curve_3.ls
Description: FIXME broken rules; FASS (space-Filling, self-Avoiding, Simple, self-Similar)
Variables: {L, R}
P: {
	ω → L
	L → L+F+R-F-L+F+R-F-L-F-R+F+L-F-R-F-L+F+R-F-L-F-R-FL+F+R+F+L+F+R-F-L+F+R+F+L-R-F+F+L+F+R-F-L+F+R-F-L
	R → R-F-L+F+R-F-L+F+R+F+L-F-R+F+L+F+R-F-L+F+R+F+L+F+R-F-L-F-R-F-L+F+R-F-L-F-R+F+L-F-R-F-L+F+R-F-L+F+R
	L → ε
	R → ε
}
n = 2, δ = 45°
---
Grammar #23: fass_spiral.ls
Description: FASS (space-Filling, self-Avoiding, Simple, self-Similar)
Variables: {Y, L, R}
P: {
	ω → FY
	Y → Y+RFR+FLF+RFRFR+FLFLF
	L → LF+RFR+FL-F-LFLFL-FRFR+
	R → -LFLF+RFRFR+F+RF-LFL-FR
	Y → ε
	L → ε
	R → ε
}
n = 3, δ = 90°
---
Grammar #24: fernando.ls
Description: Fernando
Variables: {X}
P: {
	ω → X
	X → F[+++++++++X]-F[---------X]X
	X → F
}
n = 3, δ = 3°
---
Grammar #25: fibonacci.ls
Description: Fibonacci tree
Variables: {A, B}
P: {
	ω → A
	A → B
	B → AB
	A → A
	B → B
}
n = 5
---
Grammar #26: fibonacci_tree.ls
Description: Fibonacci tree
Variables: {A, B}
P: {
	ω → FA
	A → FB
	B → [-FA][+FB]
	A → ε
	B → ε
}
n = 8, δ = 20°
---
Grammar #27: fir_branch.ls
Description: Fir branch
Variables: {X, Y}
P: {
	ω → Y
	X → X[-FFF][+FFF]FX
	Y → YFX[+Y][-Y]
	X → ε
	Y → ε
}
n = 5, δ = 25°
---
Grammar #28: fir_tree.ls
Description: Fir tree
Variables: {X, F}
P: {
	ω → X
	X → F[+X][-X]FX
	F → FF
	X → F
	F → F
}
n = 4, δ = 30°
---
Grammar #29: flake.ls
Description: Snow flake
Variables: {F}
P: {
	ω → [F]+[F]+[F]+[F]+[F]+[F]
	F → >F<[+F][-F]F
	F → F
}
n = 4, δ = 60°, scale = 2.0
---
Grammar #30: flake_thickness.ls
Description: Snow flake
Variables: {A, F}
P: {
	ω → [A]+[A]+[A]+[A]+[A]+[A]
	A → #AF![+F][-F]F
	F → >F<
	A → F
	F → F
}
n = 6, δ = 60°, scale = 1.8
---
Grammar #31: gosper_curve.ls
Description: Gosper curve
Variables: {A, B}
P: {
	ω → A
	A → A-B--B+A++AA+B-
	B → +A-BB--B-A++A+B
	A → F
	B → F
}
n = 4, δ = 60°
---
Grammar #32: grid.ls
Description: Grid
Variables: {F}
P: {
	ω → F
	F → F-F+F+F+F-F-F-F+F
	F → F
}
n = 2, δ = 90°
---
Grammar #33: hexagonal_tiling.ls
Description: Hexagonal tiling
Variables: {X, Y}
P: {
	ω → X
	X → [-F+F[Y]+F][+F-F[X]-F]
	Y → [-F+F[Y]+F][+F-F-F]
	X → ε
	Y → ε
}
n = 8, δ = 60°
---
Grammar #34: hexa_grid.ls
Description: FIXME: hexa-grid
Variables: {F}
P: {
	ω → F
	F → F+F+F-F-F-F-F+F+F+F+F-F-F
	F → F
}
n = 2, δ = 60°
---
Grammar #35: hilbert_curve.ls
Description: Hilbert curve
Variables: {L, R}
P: {
	ω → L
	L → +RF-LFL-FR+
	R → -LF+RFR+FL-
	L → ε
	R → ε
}
n = 5, δ = 90°
---
Grammar #36: hilbert_curve_three_dim.ls
Description: Hilbert curve in three dimensions
Variables: {A, B, C, D}
P: {
	ω → A
	A → B-F+CFC+F-D&F^D-F+&&CFC+F+B//
	B → A&F^CFB^F^D^^-F-D^|F^B|FC^F^A//
	C → |D^|F^B-F+C^F^A&&FA&F^C+F+B^F^D//
	D → |CFB-F+B|FA&F^A&&FB-F+B|FC//
	A → ε
	B → ε
	C → ε
	D → ε
}
n = 2, δ = 90°
---
Grammar #37: how_it_works.ls
Description: an example of an L-system production rule, see lsys.m4 for details
Variables: {F}
P: {
	ω → F
	F → F+F
	F → F
}
n = 3
---
Grammar #38: islands_and_lakes.ls
Description: Islands and lakes
Variables: {F, f}
P: {
	ω → F-F-F-F
	F → F-f+FF-F-FF-Ff-FF+f-FF+F+FF+Ff+FFF
	f → ffffff
	F → F
	f → f
}
n = 2, δ = 90°
---
Grammar #39: koch_1.ls
Description: Koch curve
Variables: {F}
P: {
	ω → F+F+F+F
	F → FF+F+F+F+F+F-F
	F → F
}
n = 3, δ = 90°
---
Grammar #40: koch_4.ls
Description: Koch curve
Variables: {F}
P: {
	ω → F+F+F+F
	F → FF+F++F+F
	F → F
}
n = 3, δ = 90°
---
Grammar #41: koch_5.ls
Description: Koch curve
Variables: {F}
P: {
	ω → F+F+F+F
	F → F+FF++F+F
	F → F
}
n = 4, δ = 90°
---
Grammar #42: koch_6.ls
Description: Koch curve
Variables: {F}
P: {
	ω → F+F+F+F
	F → F+F-F+F+F
	F → F
}
n = 4, δ = 90°
---
Grammar #43: koch_7.ls
Description: Koch
Variables: {F}
P: {
	ω → F-F-F-F-F-F
	F → F+F-F-F+F
	F → F
}
n = 2, δ = 60°
---
Grammar #44: koch_anti_snowflake.ls
Description: Koch anti snowflake
Variables: {F}
P: {
	ω → F++F++F
	F → F+F--F+F
	F → F
}
n = 5, δ = 60°
---
Grammar #45: koch_curve.ls
Description: Koch curve
Variables: {F}
P: {
	ω → F
	F → F+F--F+F
	F → F
}
n = 5, δ = 60°
---
Grammar #46: koch_curve_quadratic.ls
Description: Quadratic Koch curve
Variables: {F}
P: {
	ω → F
	F → F+F-F-FF+F+F-F
	F → F
}
n = 3, δ = 90°
---
Grammar #47: koch_island.ls
Description: Quadratic Koch island
Variables: {F}
P: {
	ω → F-F-F-F
	F → F+F-F-FF+F+F-F
	F → F
}
n = 3, δ = 90°
---
Grammar #48: koch_quadratic_snowflake_2.ls
Description: Quadratic Koch snowflake
Variables: {F}
P: {
	ω → F+F+F+F
	F → F+F-F-F+F
	F → F
}
n = 3, δ = 90°
---
Grammar #49: koch_quadratic_snowflake_3.ls
Description: Quadratic Koch snowflake
Variables: {F}
P: {
	ω → F-F-F-F
	F → F+F-F-F+F
	F → F
}
n = 3, δ = 90°
---
Grammar #50: koch_quadratic_snowflake.ls
Description: Quadratic Koch snowflake
Variables: {F}
P: {
	ω → F
	F → F+F-F-F+F
	F → F
}
n = 3, δ = 90°
---
Grammar #51: koch_rectangles.ls
Description: Variation to Koch curve
Variables: {F}
P: {
	ω → F+F+F+F
	F → FF+F-F+F+FF
	F → F
}
n = 3, δ = 90°
---
Grammar #52: koch_snowflake.ls
Description: Koch snowflake
Variables: {F}
P: {
	ω → F--F--F
	F → F+F--F+F
	F → F
}
n = 5, δ = 60°
---
Grammar #53: koch_square_snowflake.ls
Description: Koch square snowflake
Variables: {F}
P: {
	ω → F--F--F--F
	F → F+F--F+F
	F → F
}
n = 3, δ = 45°
---
Grammar #54: leaf.ls
Description: A leaf
Variables: {F, A, B, X, Y}
P: {
	ω → A
	F → >F<
	A → F[+X]FB
	B → F[-Y]FA
	X → A
	Y → B
	F → F
	A → F
	B → F
	X → F
	Y → F
}
n = 10, δ = 30°, scale = 1.36
---
Grammar #55: levy_c_curve.ls
Description: Lévy C curve
Variables: {F}
P: {
	ω → F
	F → -F++F-
	F → F
}
n = 12, δ = 45°
---
Grammar #56: lines.ls
Description: Fernando's lines
Variables: {F, G}
P: {
	ω → F
	F → -F+F+G[+F+F]-
	G → GG
	F → F
	G → f
}
n = 3, δ = 60°
---
Grammar #57: mango_leaves.ls
Description: Mango leaves
Variables: {A, Z}
P: {
	ω → A---A
	A → f-F+Z+F-fA
	Z → F-FF-F--[--Z]F-FF-F--F-FF-F--
	A → ε
	Z → ε
}
n = 6, δ = 60°
---
Grammar #58: moore_curve.ls
Description: Moore curve
Variables: {L, R}
P: {
	ω → LFL+F+LFL
	L → -RF+LFL+FR-
	R → +LF-RFR-FL+
	L → ε
	R → ε
}
n = 4, δ = 90°
---
Grammar #59: pattern.ls
Description: A triangular pattern
Variables: {W, X, Y, Z}
P: {
	ω → F---W---F---Y
	W → +++X--F--ZFX+
	X → ---W++F++YFW-
	Y → +ZFX--F--Z+++
	Z → -YFW++F++Y---
	W → ε
	X → ε
	Y → ε
	Z → ε
}
n = 6, δ = 30°
---
Grammar #60: peano_curve.ls
Description: Peano curve
Variables: {X, Y}
P: {
	ω → X
	X → XFYFX+F+YFXFY-F-XFYFX
	Y → YFXFY-F-XFYFX+F+YFXFY
	X → ε
	Y → ε
}
n = 3, δ = 90°
---
Grammar #61: peano_curve_polygon.ls
Description: Peano curve polygon
Variables: {F}
P: {
	ω → F
	F → F+F-F-F-F+F+F+F-F
	F → F
}
n = 3, δ = 90°
---
Grammar #62: peano_gosper_curve.ls
Description: Peano-Gosper curve
Variables: {X, Y}
P: {
	ω → FX
	X → X+YF++YF-FX--FXFX-YF+
	Y → -FX+YFYF++YF+FX--FX-Y
	X → ε
	Y → ε
}
n = 3, δ = 60°
---
Grammar #63: penrose_tiling_2.ls
Description: Penrose tiling 2
Variables: {A, B, C, D}
P: {
	ω → +A--B---C--D
	A → C++D----B[-C----A]++
	B → +C--D[---A--B]+
	C → -A++B[+++C++D]-
	D → --C++++A[+D++++B]--B
	A → F
	B → F
	C → F
	D → F
}
n = 5, δ = 36°
---
Grammar #64: penrose_tiling_3.ls
Description: Penrose tiling 3
Variables: {A, B, C, D}
P: {
	ω → D----B-C----A
	A → C++D----B[-C----A]++
	B → +C--D[---A--B]+
	C → -A++B[+++C++D]-
	D → --C++++A[+D++++B]--B
	A → F
	B → F
	C → F
	D → F
}
n = 5, δ = 36°
---
Grammar #65: penrose_tiling.ls
Description: Penrose tiling
Variables: {A, B, C, D}
P: {
	ω → [B]++[B]++[B]++[B]++[B]
	A → C++D----B[-C----A]++
	B → +C--D[---A--B]+
	C → -A++B[+++C++D]-
	D → --C++++A[+D++++B]--B
	A → F
	B → F
	C → F
	D → F
}
n = 5, δ = 36°
---
Grammar #66: pentafrac.ls
Description: fractal pentagram as a Eulerian graph
Variables: {F}
P: {
	ω → F-F-F-F-F
	F → FF--F-F-F-F
	F → F
}
n = 2, δ = 144°
---
Grammar #67: pentafrac_oriented_scaled.ls
Description: oriented scaled fractal pentagram as a Eulerian graph
Variables: {F}
P: {
	ω → F----F----F----F----F
	F → F+>#F!<+F----F----F----F
	F → F
}
n = 4, δ = 36°, scale = 2.0
---
Grammar #68: pentafrac_scaled.ls
Description: scaled fractal pentagram as a Eulerian graph
Variables: {F}
P: {
	ω → F-F-F-F-F
	F → F>`F'<--F-F-F-F
	F → F
}
n = 4, δ = 144°, scale = 2.0
---
Grammar #69: pentafrac_with_scale_2.ls
Description: Fractal pentagram (scaled) drawn in one stroke
Variables: {}
P: {
	ω → F----F----F----F----F
}
n = 4, δ = 144°, scale = 2.7
---
Grammar #70: pentagon.ls
Description: pentagon as a planar Eulerian graph
Variables: {F}
P: {
	ω → F-F-F-F-F
	F → F-F++F+F-F-F
	F → F
}
n = 3, δ = 72°
---
Grammar #71: pentagram.ls
Description: pentagram-snowflake as a Eulerian graph
Variables: {A}
P: {
	ω → FAFAFAFAFA
	A → <FAFAFAFAF>
	A → -
}
n = 5, δ = 144°, scale = 2.62
---
Grammar #72: pentagram_recur_exact.ls
Description: pentagram recursively (exact grammar)
Variables: {A, B}
P: {
	ω → FAFAFAFAFB
	A → -<AFAFAFAFAF>
	B → -<AFAFAFAFAF>
	A → -
	B → ε
}
n = 5, δ = 144°, scale = 2.62
---
Grammar #73: pentagram_recur.ls
Description: pentagram recursively
Variables: {A}
P: {
	ω → FAFAFAFAFA
	A → -<AFAFAFAFAF>
	A → -
}
n = 5, δ = 144°, scale = 2.62
---
Grammar #74: pentakoch.ls
Description: five pointed star variant of Koch's snowflake
Variables: {F}
P: {
	ω → F+F--F+F--F+F--F+F--F+F
	F → F+F--F+F
	F → F
}
n = 5, δ = 72°
---
Grammar #75: pentaline.ls
Description: five lines as star
Variables: {A}
P: {
	ω → [FA]-[FA]-[FA]-[FA]-[FA]
	A → <[FA]-[FA]-[FA]-[FA]-[FA]>
	A → ε
}
n = 5, δ = 72°, scale = 2.62
---
Grammar #76: pentaplex.ls
Description: Pentaplex
Variables: {F}
P: {
	ω → F++F++F++F++F
	F → F++F++F|F-F++F
	F → F
}
n = 3, δ = 36°
---
Grammar #77: pentasnow.ls
Description: 
Variables: {%%%}
P: {
	ω → %%%
	%%% → %%%
	%%% → %%%
}
n = 2, δ = %%%°, scale = 1.0
---
Grammar #78: pentastar.ls
Description: five-pointed star as a planar Eulerian graph
Variables: {A}
P: {
	ω → A--A--A--A--A
	A → A--A+AA--A--A
	A → F+F
}
n = 2, δ = 72°
---
Grammar #79: plant_colored.ls
Description: Fractal plant (young parts are green, old are brown)
Variables: {X, F}
P: {
	ω → X
	X → F+[[X]-X]-F[-FX]+X
	F → FF
	X → G
	F → R
}
n = 5, δ = 25°
---
Grammar #80: plant_colored_scale_thickness.ls
Description: Fractal plant (young are green, old are brown; scale, thickness)
Variables: {X, F}
P: {
	ω → X
	X → F+[[X]-X]-F[-FX]+X
	F → >#F!<
	X → G
	F → R
}
n = 5, δ = 25°, scale = 1.5
---
Grammar #81: plant.ls
Description: Fractal plant
Variables: {X, F}
P: {
	ω → X
	X → F+[[X]-X]-F[-FX]+X
	F → FF
	X → F
	F → F
}
n = 5, δ = 25°
---
Grammar #82: quadratic_gosper_curve.ls
Description: Quadratic Gosper curve
Variables: {X, Y}
P: {
	ω → -YF
	X → XFX-YF-YF+FX+FX-YF-YFFX+YF+FXFXYF-FX+YF+FXFX+YF-FXYF-YF-FX+FX+YFYF-
	Y → +FXFX-YF-YF+FX+FXYF+FX-YFYF-FX-YF+FXYFYF-FX-YFFX+FX+YF-YF-FX+FX+YFY
	X → ε
	Y → ε
}
n = 2, δ = 90°
---
Grammar #83: shrub.ls
Description: Shrub
Variables: {A, B, C}
P: {
	ω → A
	A → F[-FB]F[+FC]FA
	B → F[-FB]F[+F]FB
	C → F[-F]F[+FC]FC
	A → ε
	B → ε
	C → ε
}
n = 4, δ = 30°
---
Grammar #84: sierpinski_arrowhead_curve.ls
Description: Sierpiński arrowhead curve
Variables: {A, B}
P: {
	ω → A
	A → B-A-B
	B → A+B+A
	A → F
	B → F
}
n = 6, δ = 60°
---
Grammar #85: sierpinski_carpet.ls
Description: Sierpinski carpet
Variables: {F, G}
P: {
	ω → F
	F → F+F-F-F-G+F+F+F-F
	G → GGG
	F → F
	G → f
}
n = 4, δ = 90°
---
Grammar #86: sierpinski_curve_classic.ls
Description: Classic Sierpinski Curve
Variables: {X}
P: {
	ω → F--XF--F--XF
	X → XF+F+XF--F--XF+F+X
	X → ε
}
n = 4, δ = 45°
---
Grammar #87: sierpinski_curve.ls
Description: Sierpiński curve
Variables: {X}
P: {
	ω → X
	X → X+F+X--F--X+F+X
	X → F
}
n = 3, δ = 45°
---
Grammar #88: sierpinski_curve_square_grid.ls
Description: Square-grid approximation of the Sierpinski [1912] curve
Variables: {X}
P: {
	ω → F+XF+F+XF
	X → XF-F+F-XF+F+XF-F+F-X
	X → ε
}
n = 4, δ = 90°
---
Grammar #89: sierpinski.ls
Description: Sierpiński triangle
Variables: {F, G}
P: {
	ω → F-G-G
	F → F-G+F+G-F
	G → GG
	F → F
	G → F
}
n = 5, δ = 120°
---
Grammar #90: sierpinski_median_curve.ls
Description: Sierpiński median curve
Variables: {L, R}
P: {
	ω → L--F--L--F
	L → +R-F-R+
	R → -L+F+L-
	L → ε
	R → ε
}
n = 10, δ = 45°
---
Grammar #91: sierpinski_triangle_scaled.ls
Description: Sierpiński triangle (scaled)
Variables: {F, G}
P: {
	ω → F-G-G
	F → F-G+F+G-F
	G → >G<
	F → F
	G → F
}
n = 4, δ = 120°, scale = 2.0
---
Grammar #92: snake_kolam.ls
Description: Snake kolam
Variables: {X}
P: {
	ω → F+XF+F+XF
	X → XF-F-F+XF+F+XF-F-F+X
	X → ε
}
n = 4, δ = 90°
---
Grammar #93: spiral_tiling.ls
Description: Spiral tiling
Variables: {A, X, Y}
P: {
	ω → AAAA
	A → X+X+X+X+X+X+
	X → [F+F+F+F[---X-Y]+++++F++++++++F-F-F-F]
	Y → [F+F+F+F[---Y]+++++F++++++++F-F-F-F]
	A → ε
	X → ε
	Y → ε
}
n = 5, δ = 15°
---
Grammar #94: square_cross.ls
Description: Square cross
Variables: {X, Y}
P: {
	ω → XYXYXYX+XYXYXYX+XYXYXYX+XYXYXYX
	X → X+X+XY-Y-
	Y → +X+XY-Y-Y
	X → F
	Y → F
}
n = 3, δ = 90°
---
Grammar #95: stars.ls
Description: Fractal stars
Variables: {X, Y}
P: {
	ω → X
	X → Y[+Y][--Y]Y
	Y → X[++X][-X]X
	X → F
	Y → F
}
n = 6, δ = 60°
---
Grammar #96: terdragon.ls
Description: Terdragon (Davis and Knuth)
Variables: {F}
P: {
	ω → F
	F → F+F-F
	F → F
}
n = 7, δ = 120°
---
Grammar #97: tree_alternating.ls
Description: Tree with alternating branches
Variables: {A, B}
P: {
	ω → A
	A → F<[+A]FB
	B → F<[-B]FA
	A → F
	B → F
}
n = 12, δ = 30°, scale = 1.6
---
Grammar #98: tree_bent_to_left.ls
Description: A tree bent to the left
Variables: {F, X, Z}
P: {
	ω → X
	F → FX[FX[+XF]]
	X → FF[+XZ++X-F[+ZX]][-X++F-X]
	Z → [+F-X-F][++ZX]
	F → F
	X → ε
	Z → ε
}
n = 4, δ = 15°
---
Grammar #99: tree_binary_differently_colored.ls
Description: a binary tree with scale, thickness and color (young parts are green, old are brown)
Variables: {X, F}
P: {
	ω → X
	X → F[-X][+X]
	F → >#F!<
	X → G
	F → N
}
n = 8, δ = 20°, scale = 1.5
---
Grammar #100: tree_binary_differently.ls
Description: a binary tree with scale and thickness
Variables: {X, F}
P: {
	ω → X
	X → F[-X][+X]
	F → >#F!<
	X → F
	F → F
}
n = 7, δ = 20°, scale = 1.5
---
Grammar #101: tree_binary.ls
Description: binary tree (young parts are green, old are brown)
Variables: {G, B}
P: {
	ω → G
	G → B[-G]+G
	B → BB
	G → G
	B → N
}
n = 8, δ = 45°
---
Grammar #102: tree_binary_plain.ls
Description: An ordinary binary tree
Variables: {F}
P: {
	ω → F
	F → F[-F][+F]
	F → F
}
n = 3, δ = 30°
---
Grammar #103: tree_binary_scale.ls
Description: Binary tree with scale
Variables: {X}
P: {
	ω → FX
	X → >[-FX]+FX
	X → F
}
n = 9, δ = 40°, scale = 0.568
---
Grammar #104: tree_binary_scale_thickness.ls
Description: Binary tree with scale and thickness
Variables: {X, F}
P: {
	ω → FX
	X → >[-FX]+FX
	F → #F!
	X → F
	F → F
}
n = 9, δ = 40°, scale = 0.568
---
Grammar #105: tree_colored.ls
Description: A colored tree (young parts are green, old are brown)
Variables: {A, B}
P: {
	ω → A
	A → B[+A][-A]BA
	B → BB
	A → G
	B → N
}
n = 5, δ = 45°
---
Grammar #106: tree_double.ls
Description: Double branched tree
Variables: {F, X}
P: {
	ω → X
	F → FF
	X → F[+X]F[-X]+X
	F → F
	X → F
}
n = 5, δ = 25°
---
Grammar #107: tree_double_scale.ls
Description: Double branched tree (scale)
Variables: {F, X}
P: {
	ω → X
	F → >F<
	X → F[+X]F[-X]+X
	F → F
	X → F
}
n = 5, δ = 25°, scale = 1.8
---
Grammar #108: tree_double_scale_thickness.ls
Description: Double branched tree (scale, thickness)
Variables: {F, X}
P: {
	ω → X
	F → >#F!<
	X → F[+X]F[-X]+X
	F → F
	X → F
}
n = 5, δ = 25°, scale = 1.8
---
Grammar #109: tree_four_branches.ls
Description: Four branches tree
Variables: {X, F}
P: {
	ω → X
	X → F+[-F-XF-X][+FF][--XF[+X]][++F-X]
	F → FF
	X → F
	F → F
}
n = 5, δ = 19°
---
Grammar #110: tree.ls
Description: A tree
Variables: {A, B}
P: {
	ω → A
	A → B[+A][-A]BA
	B → BB
	A → F
	B → F
}
n = 5, δ = 30°
---
Grammar #111: tree_ordinary.ls
Description: an ordinary tree
Variables: {A, F}
P: {
	ω → A
	A → F[+A][-A]FA
	F → FF
	A → F
	F → F
}
n = 6, δ = 45°
---
Grammar #112: tree_ordinary_scale.ls
Description: An ordinary fractal tree with scale
Variables: {A, F}
P: {
	ω → A
	A → F[+A][-A]FA
	F → >F<
	A → F
	F → F
}
n = 6, δ = 45°, scale = 2.0
---
Grammar #113: tree_organic.ls
Description: Organic tree
Variables: {X, F}
P: {
	ω → X
	X → -F[+F][---X]+F-F[++++X]-X
	F → FF
	X → F
	F → F
}
n = 6, δ = 15°
---
Grammar #114: tree_organic_scale_width.ls
Description: Organic tree (scale, width)
Variables: {X, F}
P: {
	ω → X
	X → -F[+F][---X]+F-F[++++X]-X
	F → >#F!<
	X → F
	F → F
}
n = 6, δ = 15°, scale = 1.8
---
Grammar #115: tree_pythagorean.ls
Description: Pythagorean tree
Variables: {A}
P: {
	ω → F++F++F++A
	A → [--->F++A++F++F]F[--->F++F++A++F]
	A → F
}
n = 11, δ = 45°, scale = 0.707106781
---
Grammar #116: tree_pythagorean_test.ls
Description: Pythagorean tree
Variables: {A}
P: {
	ω → F+++F+++F+++A
	A → [----->>F+++A+++F+++F]F[----->F+++F+++A+++F]
	A → F
}
n = 1, δ = 30°, scale = 0.707106781
---
Grammar #117: tree_spiral.ls
Description: Tree spiral
Variables: {F, X}
P: {
	ω → X
	F → FXF[-F[-FX]+FX]
	X → F++F
	F → F
	X → ε
}
n = 4, δ = 16°
---
Grammar #118: tree_ternary_longer.ls
Description: Longer ternary tree
Variables: {F}
P: {
	ω → F
	F → FF[+F][-F]F
	F → F
}
n = 5, δ = 45°
---
Grammar #119: tree_ternary.ls
Description: Ternary tree
Variables: {F}
P: {
	ω → F
	F → F[-F][+F]F
	F → F
}
n = 5, δ = 30°
---
Grammar #120: tree_thickness.ls
Description: An ordinary fractal tree of various thicknesses of branches
Variables: {A, F}
P: {
	ω → A
	A → F[+A][-A]FA
	F → #FF!
	A → F
	F → F
}
n = 7, δ = 45°
---
Grammar #121: tree_triple.ls
Description: Triple branches tree
Variables: {X, F}
P: {
	ω → X
	X → F[[[+FX]-FXF]---X]
	F → FF
	X → F
	F → F
}
n = 5, δ = 20°
---
Grammar #122: triangular_grid_curve.ls
Description: A triangular grid
Variables: {F}
P: {
	ω → F
	F → F+F-F-F+F+F-F
	F → F
}
n = 4, δ = 120°
---
Grammar #123: triangular_grid.ls
Description: A triangular grid
Variables: {F}
P: {
	ω → F
	F → F+FFF-F-F+FF+F+F-FF-F
	F → F
}
n = 3, δ = 120°
---
Grammar #124: triangular_star.ls
Description: Triangular star
Variables: {F}
P: {
	ω → F+F+F
	F → FF++F+F
	F → F
}
n = 3, δ = 120°
---
Grammar #125: triangular_star_with_scale.ls
Description: Triangular star with scale
Variables: {F}
P: {
	ω → F+F+F
	F → F>F<++F+F
	F → F
}
n = 3, δ = 120°, scale = 2
---
Grammar #126: water_weed.ls
Description: A water weed
Variables: {F}
P: {
	ω → F
	F → FF[-F++F][+F--F]++F--F
	F → F
}
n = 4, δ = 27°
---
Grammar #127: weed_closed.ls
Description: Weed closed branches
Variables: {F}
P: {
	ω → F
	F → FF-[-F+F+F]+[+F-F-F]
	F → F
}
n = 3, δ = 22°
---
Grammar #128: weed.ls
Description: A weed
Variables: {F}
P: {
	ω → F
	F → F[-F]F[+F][F]
	F → F
}
n = 4, δ = 30°
